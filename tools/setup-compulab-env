#!/bin/bash

declare -A SUPPORTED_MACHINE=([cl-som-imx7]=1)

get_meta() {
if [[ -d ${dir} ]];then
git -C ${dir} remote update
git -C ${dir} pull
else
git clone ${url} ${branch} ${dir}
fi
}

get_meta_compulab() {
dir="../sources/meta-compulab"
branch="-b devel"
url="https://github.com/compulab-yokneam/meta-compulab"
get_meta ${url} ${branch} ${dir}
}

get_meta_compulab_bsp() {
dir="../sources/meta-compulab-bsp"
branch="-b master"
url="https://github.com/compulab-yokneam/meta-compulab-bsp"
get_meta ${url} ${branch} ${dir}
}

mod_bblayer() {
# Get CompuLab Main meta layer
get_meta_compulab
get_meta_compulab_bsp
# A mandatory bsp layer: kernel, u-boot, imx-boot
cat << eof | tee -a ${BBLAYERS_CONF} > /dev/null
BBLAYERS += " \\
	\${BSPDIR}/sources/meta-compulab \\
	\${BSPDIR}/sources/meta-compulab-bsp/meta-bsp \\
	\${BSPDIR}/sources/meta-bsp-imx7 \\
	\${BSPDIR}/sources/meta-openembedded/meta-xfce \\
"
eof
}

mod_packag_classes() {
sed -i "s/\(PACKAGE_CLASSES\).*/\1 = 'package_deb package_tar'/g" ${LOCAL_CONF}
}

mod_local() {
# Modify local.conf
CORE_IMAGE_EXTRA_INSTALL+=" dhcp-client rng-tools "
CORE_IMAGE_EXTRA_INSTALL+=" cl-uboot cl-deploy cl-camera cl-stest"
CORE_IMAGE_EXTRA_INSTALL+=" memtester htop iotop tmux iperf3 stress-ng "
CORE_IMAGE_EXTRA_INSTALL+=" bt-start video-mode "
CORE_IMAGE_EXTRA_INSTALL+=" u-boot-fw-utils "
CORE_IMAGE_EXTRA_INSTALL+=" kernel-modules"
CORE_IMAGE_EXTRA_INSTALL+=" firmware-imx-sdma"
CORE_IMAGE_EXTRA_INSTALL+=" linux-firmware-wl18xx"
CORE_IMAGE_EXTRA_INSTALL+=" linux-firmware-wlcommon"
CORE_IMAGE_EXTRA_INSTALL+=" linux-firmware-ti-connectivity-license"
CORE_IMAGE_EXTRA_INSTALL+=" bluez5"
CORE_IMAGE_EXTRA_INSTALL+=" wpa-supplicant"
CORE_IMAGE_EXTRA_INSTALL+=" wvdial wvdial-compulab"
IMAGE_FEATURES+=" package-management ssh-server-openssh "
cat << eof | tee -a ${LOCAL_CONF} > /dev/null
CORE_IMAGE_EXTRA_INSTALL += "${CORE_IMAGE_EXTRA_INSTALL}"
IMAGE_FEATURES += "${IMAGE_FEATURES}"
LICENSE_FLAGS_WHITELIST = "commercial"
DISTRO_FEATURES_append = " polkit"
PREFERRED_RPROVIDER_u-boot-fw-utils = "u-boot-fw-utils"
eof
CORE_IMAGE_EXTRA_INSTALL=" modemmanager networkmanager "
cat << eof | tee -a ${LOCAL_CONF} > /dev/null
# Make it use for core-images only
# These package cause a root image build conflict with gui images
# CORE_IMAGE_EXTRA_INSTALL += "${CORE_IMAGE_EXTRA_INSTALL}"
eof
}

CWD=$(pwd)
PROGNAME=${BASH_SOURCE[0]}
[ $(basename -- $BASH_SOURCE) == $(basename -- $0) ] && EXIT="exit" || EXIT="return"

if [[ $(id -u) -eq 0 ]]; then
    echo "ERROR: do not use the BSP as root. Exiting..."
    ${EXIT}
fi

BBLAYERS_CONF=conf/bblayers.conf
BB_CL_CONF_DONE=conf/bb_cl_conf.done
LOCAL_CONF=conf/local.conf

if ([ ! -f ${BBLAYERS_CONF} ] || [ ! -f ${LOCAL_CONF} ]);then
cat << eom
    Warning: Files ${BBLAYERS_CONF} and ${LOCAL_CONF} not found.
    Make sure that the scritp issued at a correct location.
eom
    ${EXIT} 2
fi

[[ -n ${FORCE} ]] && rm -rf ${BB_CL_CONF_DONE}

if [ -f ${BB_CL_CONF_DONE} ];then
cat << eom
    Note: Already issued.
    Nothing to be done.
eom
    ${EXIT} 0
fi

eval $(awk '(/MACHINE|DISTRO/)&&(gsub(/'"'"'/,"")&&($0=$1"="$NF))' ORS=";" ${LOCAL_CONF})

if [[ ${SUPPORTED_MACHINE[${MACHINE}]} -ne 1 ]];then
cat << eom
    ${MACHINE} is not in supported machine list.
    Error exit.
eom
    ${EXIT} 0
fi

cat << eom
    Prepare: ${MACHINE}:${DISTRO} ...
eom

mod_bblayer
# Don't touch the conf/local.conf if The CompuLab Build environment is in use
[[ -z ${DEVENV} ]] && mod_local
mod_packag_classes

cat << eom
    Note: Files ${BBLAYERS_CONF} and ${LOCAL_CONF} updated successfully.
eom

cat << eom > ${BB_CL_CONF_DONE}
$(date)
eom

unset IMAGE_FEATURES CORE_IMAGE_EXTRA_INSTALL
${EXIT} 0
